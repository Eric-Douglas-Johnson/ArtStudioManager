@page "/classes/{classId:guid?}"
@rendermode @(new InteractiveServerRenderMode(prerender:true))

<h3>Edit Class</h3>

@if (artClass == null) { throw new InvalidOperationException("Art Class could not be initialized."); }

<EditForm Model="@artClass" OnValidSubmit="Save" OnInvalidSubmit="ShowSubmitError">
    <div style="width:500px; margin-bottom:10px;">
        <label for="classtype">Class Type</label>
        <br />
        <InputRadioGroup id="classtype" @bind-Value="@artClass.Type" class="form-control">
            @foreach (var classType in (ClassType[])Enum.GetValues(typeof(ClassType)))
            {
                <InputRadio Value="classType" />
                @classType
                <br />
            }
        </InputRadioGroup>
    </div>
    <div style="width:500px; margin-bottom:10px;">
        <label for="name">Name</label>
        <InputText id="name" @bind-Value="artClass.Name" class="form-control"></InputText>
    </div>
    <div style="width:500px; margin-bottom:10px;">
        <label for="desc">Description</label>
        <InputText id="desc" @bind-Value="artClass.Description" class="form-control"></InputText>
    </div>
    <div style="width:200px; margin-bottom:10px;">
        <label for="dateandtime">Starts</label>
        <InputDate id="dateandtime" Type="InputDateType.DateTimeLocal" @bind-Value="artClass.Start" class="form-control"></InputDate>
    </div>
    <div style="width:200px; margin-bottom:10px;">
        <label for="dateandtime">Ends</label>
        <InputDate id="dateandtime" Type="InputDateType.DateTimeLocal" @bind-Value="artClass.End" class="form-control"></InputDate>
    </div>
    <div style="width:200px; margin-bottom:10px;">
        <label for="cost">Cost($)</label>
        <InputNumber id="costpercustomer" @bind-Value="artClass.Cost" class="form-control"></InputNumber>
    </div>
    <div style="width:500px; margin-bottom:10px;">
        <label>Instructors</label>
        <ul>
            @if (artClass.Instructors is IEnumerable<Instructor> instructors)
            {
                @foreach (var instructor in instructors)
                {
                    <li>@instructor.Name</li>
                }
            }
        </ul>
        <button class="btn btn-primary" @onclick="EditInstructors">Edit</button>
    </div>
    <div style="width:500px; margin-bottom:10px;">
        <label>Members Signed Up</label>
        <ul>
            @if (artClass.Members is IEnumerable<Member> members)
            {
                @foreach (var member in members)
                {
                    <li>@member.Name</li>
                }
            }
        </ul>
        <button class="btn btn-primary" @onclick="EditMembers">Edit</button>
    </div>
    <div style="width:500px; margin-bottom:10px;">
        <label>Non-Members Signed Up</label>
        <ul>
            @if (artClass.NonMembers is IEnumerable<NonMember> customers)
            {
                @foreach (var customer in customers)
                {
                    <li>@customer.Name</li>
                }
            }
        </ul>
        <button class="btn btn-primary" @onclick="EditCustomers">Edit</button>
    </div>
    <div style="width:500px; margin-bottom:10px;">
        <label>Materials</label>
        <ul>
            @if (artClass.Materials is IEnumerable<Material> materials)
            {
                @foreach (var material in materials)
                {
                    <li>@material.Name : @material.Quantity</li>
                }
            }
        </ul>
        <button class="btn btn-primary" @onclick="EditCustomers">Edit</button>
    </div>
</EditForm>

@code {
    private ArtClass? artClass;

    private string newInstructorName = "";
    private string newMemberName = "";
    private string newCustomerName = "";

    [Parameter]
    public Guid ClassId { get; set; }

    protected override void OnInitialized()
    {
        artClass = new ArtClass(ClassId, new ArtClassTestDataLoader());
    }

    private void Save()
    {

    }

    private void ShowSubmitError()
    {

    }

    private void EditInstructors()
    {

    }

    private void EditMembers()
    {

    }

    private void EditCustomers()
    {
        
    }
}
