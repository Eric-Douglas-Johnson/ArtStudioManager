@page "/classes/attendance"
@using Microsoft.AspNetCore.Components.QuickGrid;
@rendermode @(new InteractiveServerRenderMode(prerender:false))
@inject IJSRuntime JsRuntime

<PageTitle>New Class Attendance</PageTitle>

<h3>New Class Attendance</h3>

<br />
<div class="parent-div">
    <div class="child-div" style="width:300px;">
        <label for="name">Add Member</label>
        <InputSelect @bind-Value="selectedMember" @onchange="HandleSelectionChange">
            @foreach (var member in members!)
            {
                <option value="@member">@member.Name</option>
            }
        </InputSelect>
    </div>
    <br />
    <button class="btn btn-primary" @onclick="@(() => AddMember(selectedMember!))">Add Member</button>
    <br /><br />

    <div class="child-div" style="width:300px;">
        <label for="name">Non Member Name</label>
        <InputText id="name" @bind-Value="newAttendeeName" class="form-control"></InputText>
    </div>
    <br />
    <button class="btn btn-primary" @onclick="@(() => AddAttendee(newAttendeeName))">Add Non Member</button>
</div>
<br /><br />

<QuickGrid Items="@queryableAttendanceRecord">
    <PropertyColumn Property="@(p => p.Artist!.Name)" Sortable="true" Title="Attendee Name" />
    <TemplateColumn Title="Actions">
        <button class="btn btn-primary" @onclick="@(() => RemoveAttendee(context.Artist!.Name!))">Remove</button>
    </TemplateColumn>
</QuickGrid>
<br />
<button class="btn btn-primary" @onclick="@(() => Save())">Save</button>

@code {
    private ArtClass? artClass;
    private IQueryable<AttendanceMark>? queryableAttendanceRecord;
    private ICollection<Member>? members;
    private Member? selectedMember;
    private string newAttendeeName = "";

    protected override void OnInitialized()
    {
        artClass = new ArtClass();
        artClass.Attendance = new();

        members = ArtistService.GetMembers(new MembersTestCollectionLoader());
        selectedMember = members.First();
    }

    private void HandleSelectionChange(ChangeEventArgs e)
    {
        selectedMember = (Member)e.Value!;
    }

    private void AddMember(Member memberToAdd)
    {
        JsRuntime.InvokeVoidAsync("alert", memberToAdd.Name);
    }

    private void AddAttendee(string attendeeName)
    {
        if (!string.IsNullOrEmpty(attendeeName)) 
        {
            //artClass.Attendance.AddAttendee();
        }
    }

    private void RemoveAttendee(string artistName)
    {
        
    }

    private void Save()
    {
        artClass!.SaveAttendance();
    }
}
