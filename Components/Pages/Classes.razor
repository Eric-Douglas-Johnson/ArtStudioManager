@page "/classes"
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Components.QuickGrid;
@rendermode @(new InteractiveServerRenderMode(prerender:false))

<PageTitle>Classes</PageTitle>

@if (classes == null)
{
    <p><em>Loading Classes.....</em></p>
}
else
{
    <QuickGrid Items="@queryableClasses">
        <PropertyColumn Property="@(p => p.Type)" Sortable="true" Title="Type" />
        <PropertyColumn Property="@(p => p.Name)" Sortable="true" Title="Name" />
        <PropertyColumn Property="@(p => p.Start.ToString("MMMM dd, yyyy"))" Sortable="true" Title="Date" />
        <PropertyColumn Property="@(p => p.Start.ToString("h:mm tt"))" Title="Start Time" />
        <PropertyColumn Property="@(p => p.End.ToString("h:mm tt"))" Title="End Time" />
        <PropertyColumn Property="@(p => p.GetPrimaryInstructor().Name)" Title="Instructor" />
        <TemplateColumn Title="Actions">
            <button class="btn btn-primary" @onclick="@(() => EditClass(context))">Edit</button>
            <button class="btn btn-primary" @onclick="@(() => EditAttendance(context))">Attendance</button>
        </TemplateColumn>
    </QuickGrid>
}

@code {
    private List<ArtClass>? classes;
    private IQueryable<ArtClass>? queryableClasses;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1000);

        classes = new List<ArtClass>();

        for (int i = 0; i < 10; i++)
        {
            classes.Add(new ArtClass(Guid.NewGuid(), new ArtClassTestDataLoader()));
        }

        queryableClasses = classes.AsQueryable<ArtClass>();
    }

    private void EditClass(ArtClass artClass)
    {
        NavigationManager.NavigateTo("classes/" + artClass.Id);
    }

    private void EditAttendance(ArtClass artClass)
    {
        NavigationManager.NavigateTo("classes/attendance/" + artClass.Id);
    }
}
